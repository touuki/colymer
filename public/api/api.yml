swagger: "2.0"
info:
  description: "Lightweight Content Polymerizing Engine & Management System"
  title: "Colymer API"
  version: "1.0"
basePath: /api
tags:
  - name: article
    description: "A single article item such as a blog, an email or a tweet etc."
  - name: attachment
    description: "Attachment of the article."
parameters:
  collection:
    name: "collection"
    in: "path"
    description: "Collection name"
    required: true
    type: "string"
  _id:
    name: "_id"
    in: "path"
    description: "Document _id"
    required: true
    type: "string"
produces:
  - "application/json"
consumes:
  - "application/json"
paths:
  /article/{collection}:
    parameters:
      - $ref: "#/parameters/collection"
    get:
      tags:
        - article
      summary: "Query articles"
      description: "Query articles"
      operationId: "queryArticles"
      parameters:
        - name: "pipeline"
          in: "query"
          description: "Aggregation Pipeline"
          required: true
          type: "string"
        - name: "collation"
          in: "query"
          description: "Collation allows users to specify language-specific rules for string comparison."
          type: "string"
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Article"
        400:
          description: "Invalid Input"
        500:
          description: "Error"
    post:
      tags:
        - article
      summary: "Insert article"
      description: "Insert article."
      operationId: "postArticle"
      parameters:
        - name: "overwrite"
          in: "query"
          description: "Whether to overwrite an article with the same id and version already exists."
          type: "boolean"
          default: false
        - name: "article"
          in: "body"
          description: "Article object"
          required: true
          schema:
            $ref: "#/definitions/Article"
      responses:
        200:
          description: "Overwritten (for overwrite=true) or already exist (for overwrite=false)"
          schema:
            type: "object"
            properties:
              _id:
                type: "string"
        201:
          description: "Created"
          schema:
            type: "object"
            properties:
              _id:
                type: "string"
        400:
          description: "Invalid Input"
        500:
          description: "Error"
  /article/{collection}/{_id}:
    parameters:
      - $ref: "#/parameters/collection"
      - $ref: "#/parameters/_id"
    get:
      tags:
        - article
      summary: "Get article"
      description: "Get article"
      operationId: "getArticle"
      parameters:
        - name: "projection"
          in: "query"
          description: "The fields to return in the query."
          type: "string"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/Article"
        400:
          description: "Invalid Input"
        404:
          description: "Not Found"
        500:
          description: "Error"
    put:
      tags:
        - article
      summary: "Update article"
      description: "Update article."
      operationId: "putArticle"
      parameters:
        - name: "UpdateOperations"
          in: "body"
          description: "The update operations to be applied"
          schema:
            type: "object"
      responses:
        204:
          description: "Updated"
        400:
          description: "Invalid Input"
        404:
          description: "Not Found"
        500:
          description: "Error"
    delete:
      tags:
        - article
      summary: "Delete article"
      description: "Delete article"
      operationId: "deleteArticle"
      responses:
        204:
          description: "OK"
        400:
          description: "Invalid Input"
        404:
          description: "Not Found"
        500:
          description: "Error"
  /attachment/upload_options/{collection}:
    parameters:
      - $ref: "#/parameters/collection"
    get:
      tags:
        - attachment
      summary: "Get the upload method of the attachment"
      description: "Get the upload method of the attachment"
      operationId: "getUploadUrl"
      parameters:
        - name: "path"
          in: "query"
          description: "The path to save attachment"
          required: true
          type: "string"
        - name: "isFormData"
          in: "query"
          description: "Whether to use multipart/form-data to upload file."
          type: "boolean"
          default: false
      responses:
        200:
          description: "OK"
          schema:
            description: "see https://github.com/request/request#requestoptions-callback"
            type: "object"
            properties:
              url:
                type: "string"
              headers:
                type: "object"
              method:
                type: "string"
              formData:
                type: "object"
        400:
          description: "Invalid Input"
        500:
          description: "Error"
  /attachment/{collection}:
    parameters:
      - $ref: "#/parameters/collection"
      - name: "path"
        in: "query"
        description: "The path to save attachment"
        required: true
        type: "string"
    get:
      tags:
        - attachment
      summary: "Get attachment"
      description: "Get attachment"
      operationId: "getAttachment"
      responses:
        302:
          description: "Found"
        400:
          description: "Invalid Input"
        500:
          description: "Error"
    post:
      tags:
        - attachment
      summary: "Upload attachment through formData"
      description: "Upload attachment through formData (multipart/form-data)"
      operationId: "postAttachment"
      consumes:
        - multipart/form-data
      parameters:
        - name: "file"
          in: "formData"
          description: "Attachment file"
          required: true
          type: "file"
      responses:
        201:
          description: "Created"
        400:
          description: "Invalid Input"
        500:
          description: "Error"
    put:
      tags:
        - attachment
      summary: "Upload attachment directly"
      description: "Upload attachment by FileReader or non-browser."
      operationId: "putAttachment"
      consumes:
        - application/octet-stream
      responses:
        201:
          description: "Created"
        400:
          description: "Invalid Input"
        500:
          description: "Error"
definitions:
  Article:
    type: "object"
    properties:
      id:
        type: "string"
        example: "322"
      author:
        type: "object"
        properties:
          id:
            type: "string"
            example: "5128446"
          name:
            type: "string"
            example: "first author"
      title:
        type: "string"
        example: "Example Title"
      content:
        type: "string"
        example: "This is an example."
      content_type:
        type: "string"
        example: "text/html"
      time:
        type: "string"
        format: "date-time"
      metadata:
        type: "object"
      original_url:
        type: "string"
        example: "http://www.example.com/5128446"
      attachments:
        type: "array"
        items:
          $ref: "#/definitions/Attachment"
      version:
        type: "string"
    required:
      - content
  Attachment:
    type: "object"
    properties:
      id:
        type: "string"
      filename:
        type: "string"
      content_type:
        type: "string"
        example: "image/jpeg"
      original_url:
        type: "string"
        example: "http://example.com/attachment.jpg"
      persist_info:
        type: "object"
        properties:
          directly_transfer:
            type: "boolean"
          follow_redirect:
            type: "boolean"
          overwrite:
            type: "boolean"
          saved:
            type: "boolean"
          path:
            type: "string"
          referer:
            type: "string"
          error:
            type: "string"
      metadata:
        type: "object"
        properties:
          height:
            type: "number"
          width:
            type: "number"
          duration:
            type: "number"